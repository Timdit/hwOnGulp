/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./app/src/script/app.js":
/*!*******************************!*\
  !*** ./app/src/script/app.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _burgerMenu_burger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./burgerMenu/burger.js */ \"./app/src/script/burgerMenu/burger.js\");\n/* harmony import */ var _blurEffect_blur_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blurEffect/blur.js */ \"./app/src/script/blurEffect/blur.js\");\n/* harmony import */ var _slider_slider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slider/slider.js */ \"./app/src/script/slider/slider.js\");\n\r\n\r\n\r\n\r\n(0,_burgerMenu_burger_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])()\r\n;(0,_blurEffect_blur_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\nconst slider = new _slider_slider_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n\n//# sourceURL=webpack://mygulp/./app/src/script/app.js?");

/***/ }),

/***/ "./app/src/script/blurEffect/blur.js":
/*!*******************************************!*\
  !*** ./app/src/script/blurEffect/blur.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst blur = () => {\r\n    let menuCard = document.querySelectorAll('.main__content-menuCard'),\r\n        menuImg = document.querySelectorAll('.main__content-menuImg'),\r\n        menuCardText = document.querySelectorAll('.main__content-menuItemText'),\r\n        menuCardBtn = document.querySelectorAll('.main__content-menuItemBtn');\r\n\r\n\r\n    menuCard.forEach((item, i) => {\r\n        item.addEventListener('click', (e) => {\r\n            removeActive()\r\n            menuCardText[i].classList.add('active')\r\n            menuImg[i].classList.add('active')\r\n            menuCardBtn[i].classList.add('active')\r\n        })\r\n    })\r\n\r\n    function removeActive(array) {\r\n        menuCard.forEach((item, i) => {\r\n            item.classList.remove('active');\r\n            menuCardText[i].classList.remove('active')\r\n            menuImg[i].classList.remove('active')\r\n            menuCardBtn[i].classList.remove('active')\r\n        })\r\n    }\r\n\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (blur);\n\n//# sourceURL=webpack://mygulp/./app/src/script/blurEffect/blur.js?");

/***/ }),

/***/ "./app/src/script/burgerMenu/burger.js":
/*!*********************************************!*\
  !*** ./app/src/script/burgerMenu/burger.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst burger = () => {\r\n    let burgerBtn = document.querySelector('.header__box-burgerBtn'),\r\n        menu = document.querySelector('.header__box-burgerMenu'),\r\n        btn = document.querySelector('.header__box-btn'),\r\n        menuOverlay = document.querySelector('.header__box-overlay'),\r\n        bodyLock = document.querySelector('body'),\r\n        spanLine = document.querySelector('.header__box-span'),\r\n        spanLine2 = document.querySelector('.header__box-span2'),\r\n        spanLine3 = document.querySelector('.header__box-span3');\r\n\r\n    burgerBtn.addEventListener('click', () => {\r\n        menu.classList.toggle('active')\r\n        burgerBtn.classList.toggle('active')\r\n        btn.classList.add('active')\r\n        menuOverlay.classList.toggle('active')\r\n        bodyLock.classList.toggle('lock')\r\n        spanLine.classList.toggle('active')\r\n        spanLine2.classList.toggle('active')\r\n        spanLine3.classList.toggle('active')\r\n    })\r\n\r\n    menuOverlay.addEventListener('click', () => {\r\n        burgerBtn.classList.remove('active')\r\n        btn.classList.remove('active')\r\n        menu.classList.remove('active')\r\n        menuOverlay.classList.remove('active')\r\n        bodyLock.classList.remove('lock')\r\n        spanLine.classList.remove('active')\r\n        spanLine2.classList.remove('active')\r\n        spanLine3.classList.remove('active')\r\n    })\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (burger);\n\n//# sourceURL=webpack://mygulp/./app/src/script/burgerMenu/burger.js?");

/***/ }),

/***/ "./app/src/script/slider/slider.js":
/*!*****************************************!*\
  !*** ./app/src/script/slider/slider.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass Slider {\r\n    constructor(obj) {\r\n        this.slider = document.querySelector(obj.slider)\r\n        this.sliderLine = this.slider.querySelector(obj.sliderLine)\r\n        this.slides = [...this.sliderLine.children]\r\n        this.next = this.slider.querySelector(obj.next)\r\n        this.prev = this.slider.querySelector(obj.prev)\r\n\r\n        this.width = this.slider.clientWidth\r\n        this.height = this.slider.clientHeight\r\n        this.dir = obj.direction.toUpperCase() == 'X' ? 'X' : 'Y'\r\n        this.moveSize = this.dir === 'X' ? this.width : this.height\r\n\r\n        this.activeSlide = 0\r\n\r\n        this.sliderLine.style = `\r\n            position: relative;\r\n            height: ${this.height}px;\r\n            overflow: hidden;\r\n        `\r\n\r\n        this.slides.forEach((slide, i) => {\r\n            slide.style = `\r\n            position: absolute;\r\n            height: ${this.height}px;\r\n            width: ${this.width}px;\r\n           `\r\n            if (i != this.activeSlide) {\r\n                slide.style.transform = `translate${this.dir}(${this.moveSize}px)`\r\n            }\r\n\r\n            if (i === this.slides.length - 1) {\r\n                slide.style.transform = `translate${this.dir}(${-this.moveSize}px)`\r\n            }\r\n        })\r\n        \r\n        let interval = setInterval(() => {\r\n            this.move(this.next)\r\n        }, 5000)\r\n        \r\n        this.slider.addEventListener('mouseover', () => {\r\n            clearInterval(interval)\r\n        })\r\n        \r\n        this.slider.addEventListener('mouseleave', () => {\r\n            interval = setInterval(() => {\r\n                this.move(this.next)\r\n            }, 5000)\r\n        })\r\n        \r\n\r\n        this.prev.addEventListener('click', () => this.move(this.prev))\r\n        this.next.addEventListener('click', () => this.move(this.next))\r\n\r\n    }\r\n\r\n    move(btn) {\r\n        let btnLeftOrRight = btn == this.next ? this.moveSize * -1 : this.moveSize\r\n\r\n        this.slides.forEach((slide, i) => {\r\n            slide.style.transition = '0s'\r\n            if (i != this.activeSlide) {\r\n                slide.style.transform = `translate${this.dir}(${btnLeftOrRight * -1}px)`\r\n            }\r\n        })\r\n\r\n        this.slides[this.activeSlide].style.transform = `translate${this.dir}(${btnLeftOrRight}px)`\r\n        this.slides[this.activeSlide].style.transition = '1s'\r\n\r\n        if (btn == this.next) {\r\n            this.activeSlide++\r\n            if (this.activeSlide >= this.slides.length) {\r\n                this.activeSlide = 0\r\n            }\r\n        } else if (btn == this.prev) {\r\n            this.activeSlide--\r\n            if (this.activeSlide <= 0) {\r\n                this.activeSlide = this.slides.length - 1\r\n            }\r\n        }\r\n\r\n        this.slides[this.activeSlide].style.transform = `translate${this.dir}(0px)`\r\n        this.slides[this.activeSlide].style.transition = '1s'\r\n\r\n        this.prev.setAttribute('disabled', 'disabled')\r\n        this.next.setAttribute('disabled', 'disabled')\r\n        \r\n        setTimeout(() => {\r\n            this.prev.removeAttribute('disabled')\r\n            this.next.removeAttribute('disabled')\r\n        }, 1500);\r\n    }\r\n}\r\n\r\nconst slider = new Slider({\r\n    slider: '.main__content-slider',\r\n    sliderLine: '.main__content-sliderLine',\r\n    next: '.main__content-sliderNext',\r\n    prev: '.main__content-sliderPrev',\r\n    direction: 'X',\r\n})\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Slider);\n\n//# sourceURL=webpack://mygulp/./app/src/script/slider/slider.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./app/src/script/app.js");
/******/ 	
/******/ })()
;